// Generated by LiveScript 1.6.0
(function(){
  var csscope;
  csscope = function(a, b){
    if (!csscope['default']) {
      csscope['default'] = new csscope.converter();
    }
    return csscope['default'].convert(a, b);
  };
  csscope.converter = function(){
    this.node = document.createElement("style");
    this.iframe = document.createElement("iframe");
    this.iframe.style.display = 'none';
    this.iframe.src = 'about:blank';
    document.body.appendChild(this.iframe);
    this.iframe.contentDocument.body.appendChild(this.node);
    return this;
  };
  csscope.converter.prototype = import$(Object.create(Object.prototype), {
    convert: function(a, b){
      var opt, ref$, css, scope, ret, i$, len$, rule, sel;
      ref$ = opt = typeof a === 'object'
        ? a
        : {
          css: b,
          scope: a
        }, css = ref$.css, scope = ref$.scope;
      this.node.textContent = css;
      ret = "";
      for (i$ = 0, len$ = (ref$ = this.node.sheet.rules).length; i$ < len$; ++i$) {
        rule = ref$[i$];
        sel = rule.selectorText.split(',').map(fn$).map(fn1$).join(',');
        rule.selectorText = sel;
        ret += rule.cssText;
      }
      return ret;
      function fn$(it){
        return it.trim();
      }
      function fn1$(it){
        return scope + " " + it;
      }
    }
  });
  if (typeof module != 'undefined' && module !== null) {
    module.exports = csscope;
  }
  if (typeof window != 'undefined' && window !== null) {
    window.csscope = csscope;
  }
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
